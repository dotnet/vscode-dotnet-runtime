parameters:
  pool: ''
  SignType: ''
  version: ''

jobs:
##### Deploy to our release environment #####
# Note: This step requires approval, allows for manual smoke testing the artifact before release
- deployment: Deploy
  pool:
    ${{ if eq(parameters.useOneEngineeringPool, 'true') }}:
        ${{ parameters.pool }}
    ${{ else }}:
        vmImage: ${{ parameters.pool.vmImage }}
  displayName: '‚ùó Deploy to Release Environment'
  environment: 'vscode-dotnetcore-extension-releases'
- job: Publish
  pool:
    ${{ if eq(parameters.useOneEngineeringPool, 'true') }}:
        ${{ parameters.pool }}
    ${{ else }}:
        vmImage: ${{ parameters.pool.vmImage }}
  displayName: 'üåê Publish to Marketplace'
  dependsOn:
  - Deploy
  variables:
    version: $[ dependencies.GetVersion.outputs['${{ parameters.version }}'] ]
  steps:
  - checkout: none # Skip checking out repo
  - task: DownloadPipelineArtifact@2
    displayName: '‚¨áÔ∏è Download Packaged Extension'
    inputs:
      path: '$(System.ArtifactsDirectory)'
  - template: install-node.yaml
  - bash: |
      npm install vsce -g --verbose
      where vsce
      echo %PATH%
      vsce publish --packagePath vscode-dotnet-runtime-$(version)-signed.vsix -p $(VSCODE_MARKETPLACE_TOKEN)
    displayName: 'üçµ Publish to Marketplace'
    workingDirectory: '$(System.ArtifactsDirectory)/vscode-dotnet-runtime-extension'